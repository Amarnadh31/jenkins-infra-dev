pipeline {
    agent{
        label 'AGENT-1'
    }
    options{
        disableConcurrentBuilds()
        timeout(time: 30, unit: 'MINUTES')
        ansiColor('xterm')

    }

    parameters{
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'select action')
    }
    stages{
        stage('init stage'){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh '''
                        cd 90-cdn
                        terraform init --reconfigure

                    '''
                }
            }
        }
        stage('plan '){
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    
                  sh '''
                        cd 90-cdn
                        terraform plan -out=tfplan
                    '''
                    
                }
            }
        }
        stage('Apply or Destroy'){
            // input {
            //     message "Should we continue?"
            //     ok "Yes, we should."
            // }
            steps{
                withAWS(region: 'us-east-1', credentials: 'aws-creds'){
                    sh """
                        cd 90-cdn
                        if [ "${params.ACTION}" == "apply" ]; then
                            terraform apply -auto-approve tfplan
                        elif [ "${params.ACTION}" == "destroy" ]; then
                            terraform destroy -auto-approve
                        fi
                    """
                }

            }

        }
        stage('downstream -1'){
            when{
                expression{ params.ACTION == 'destroy' }

            }
            parallel{
                stage('ecr'){
                    steps{
                        script{
                            build job: '70-ecr', parameters: [string(name:'ACTION', value:'destroy')], wait:false
                        }
                    }
                }
                stage('alb'){    
                    steps{
                        script{
                            build job: '60-alb', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }
                stage('acm'){
                    steps{
                        script{
                            build job: '50-acm', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }
                stage('eks'){
                    steps{
                        script{
                            build job: '40-eks', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }
                stage('rds'){
                    steps{
                        script{
                            build job: '35-rds', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }
                stage('sebastian'){
                    steps{
                        script{
                            build job: '30-sebastian', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }

            }
        }
        stage('downstream -2'){
            when{
                expression{ params.ACTION == 'destroy' }

            }
            parallel{
                stage('sg'){
                    steps{
                        script{
                            build job: '20-security-groups', parameters: [string(name:'ACTION', value:'destroy')], wait:false
                        }
                    }
                }
                stage('vpc'){
                    steps{
                        script{
                            build job: '00-vpc', parameters: [string(name:'ACTION', value:'destroy')]
                        }
                    }
                }

            }
        }
    }
    post{
        always{
            echo 'This section always run'
            deleteDir()
        }
        failure{
            echo " Build failed"
        }
        success{
            echo "Build run successfully"
        }
    }
}
